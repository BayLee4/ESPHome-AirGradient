# AirGradient Pro v4.2 DIY edition
#

substitutions:
  id: "1"
  devicename: "airgradient-pro"
  upper_devicename: "AirGradient Pro"

esphome:
  name: "${devicename}-${id}"
  friendly_name: "${upper_devicename} ${id}"
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  # name_add_mac_suffix: true
  platform: ESP8266
  board: d1_mini

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: !secret ota_password

wifi:
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
  reboot_timeout: 15min

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${upper_devicename} Fallback Hotspot"
    password: !secret fallback_ssid_password

captive_portal:

# Create a switch for safe_mode in order to flash the device
# Solution from this thread:
# https://community.home-assistant.io/t/esphome-flashing-over-wifi-does-not-work/357352/1
switch:
  - platform: safe_mode
    name: "Flash Mode (Safe Mode)"
    icon: "mdi:cellphone-arrow-down"

i2c:
  sda: D2
  scl: D1

font:
  - file: "fonts/monofont.ttf"
    id: opensans
    size: 12

display:
  - platform: ssd1306_i2c
    id: oled
    address: 0x3c
    model: "SH1106 128x64"
    pages:
      - id: page1
        lambda: |-
          it.printf(0, 0, id(opensans),  "CO2:         %3.0f ppm", id(co2).state);
          it.printf(0, 10, id(opensans), "PM 1.0:      %3.0f ppm", id(pm_1_0).state);
          it.printf(0, 20, id(opensans), "PM 2.5:      %3.0f ppm", id(pm_2_5).state);
          it.printf(0, 30, id(opensans), "PM 10:       %3.0f ppm", id(pm_10_0).state);
          it.printf(0, 40, id(opensans), "Humidity:     %2.2f %%", id(humidity).state);
          it.printf(0, 50, id(opensans), "Temperature:  %2.2f C", id(temp).state);
      # - id: page2
      #   lambda: |-

interval:
  - interval: 10s
    then:
      - display.page.show_next: oled
      - component.update: oled

uart:
  - rx_pin: D5
    tx_pin: D6
    baud_rate: 9600
    id: uart_1
    
  - rx_pin: D4
    tx_pin: D3
    baud_rate: 9600
    id: uart_2

sensor:
  - platform: sht3xd
    temperature:
      id: temp
      name: ${upper_devicename} Temperature
    humidity:
      id: humidity
      name: ${upper_devicename} Relative Humidity
    address: 0x44
    update_interval: 10s

  - platform: pmsx003
    type: PMSX003
    uart_id: uart_1
    pm_1_0:
      id: pm_1_0
      name: "${upper_devicename} Particulate Matter <1.0µm Concentration"
    pm_2_5:
      id: pm_2_5
      name: "${upper_devicename} Particulate Matter <2.5µm Concentration"
    pm_10_0:
      id: pm_10_0
      name: "${upper_devicename} Particulate Matter <10.0µm Concentration"
    pm_0_3um:
      id: pm1_0_3um
      name: "${upper_devicename} Particulate Matter >0.3µm Count"
    pm_0_5um:
      id: pm1_0_5um
      name: "${upper_devicename} Particulate Matter >0.5µm Count"
    pm_1_0um:
      id: pm1_1_0um
      name: "${upper_devicename} Particulate Matter >1.0µm Count"
    pm_2_5um:
      id: pm1_2_5um
      name: "${upper_devicename} Particulate Matter >2.5µm Count"
    # formaldehyde:
    #   id: hcho
    #   name: "{upper_devicename} Formaldehyde (HCHO) concentration in µg per cubic meter"
    update_interval: 3min # Sensor will go into sleep mode for extended operation lifetime

  - platform: senseair
    uart_id: uart_2
    co2:
      id: co2
      name: "${upper_devicename} SenseAir CO2 Value"
    update_interval: 60s

  - platform: wifi_signal
    name: "WiFi Signal Sensor"
    update_interval: 60s

  - platform: uptime
    name: "Uptime Sensor"
    id: uptime_sensor
    update_interval: 60s